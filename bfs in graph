#include<bits/stdc++.h>
void makeAdj(unordered_map<int,set<int>>&adjList,vector<pair<int,int>>&edges){
    for(int i=0;i<edges.size();i++){
        int u=edges[i].first;
        int v=edges[i].second;
        
        adjList[u].insert(v);
        adjList[v].insert(u);
    }
}
vector<int> BFS(int vertex, vector<pair<int, int>> edges)
{
    // Write your code here
    unordered_map<int,set<int>> adjList;
    vector<int> bfs;
    vector<int> vis(vertex+1,0);
    makeAdj(adjList,edges);
    for(int i=0;i<vertex;i++){
        if(!vis[i]){
           queue<int> q;
            q.push(i); // push the node
            vis[i]=1; // mark it visited
            while(!q.empty()){// get entire node
                int node=q.front();
                q.pop();
                bfs.push_back(node);
                
                for(auto it:adjList[node]){//iterate each adjecent of i'th node
                    if(!vis[it]){
                        q.push(it);
                        vis[it]=1;
                    }
                    
                }
            }
            
        }
    }
    
    return bfs;
}
